

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Oct 05 19:47:13 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F2550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     
    50                           	psect	idataCOMRAM
    51  007EE6                     __pidataCOMRAM:
    52                           	callstack 0
    53                           
    54                           ;initializer for _led_run
    55  007EE6  0001               	dw	1
    56  007EE8  0002               	dw	2
    57  007EEA  0004               	dw	4
    58  007EEC  0008               	dw	8
    59  007EEE  0010               	dw	16
    60  007EF0  0020               	dw	32
    61  007EF2  0040               	dw	64
    62  007EF4  0080               	dw	128
    63  0000                     _LATB	set	3978
    64  0000                     _TRISB	set	3987
    65  0000                     _OSCCONbits	set	4051
    66  0000                     _ADCON1bits	set	4033
    67                           
    68                           ; #config settings
    69                           
    70                           	psect	cinit
    71  007EF6                     __pcinit:
    72                           	callstack 0
    73  007EF6                     start_initialization:
    74                           	callstack 0
    75  007EF6                     __initialization:
    76                           	callstack 0
    77                           
    78                           ; Initialize objects allocated to COMRAM (16 bytes)
    79                           ; load TBLPTR registers with __pidataCOMRAM
    80  007EF6  0EE6               	movlw	low __pidataCOMRAM
    81  007EF8  6EF6               	movwf	tblptrl,c
    82  007EFA  0E7E               	movlw	high __pidataCOMRAM
    83  007EFC  6EF7               	movwf	tblptrh,c
    84  007EFE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    85  007F00  6EF8               	movwf	tblptru,c
    86  007F02  EE00  F001         	lfsr	0,__pdataCOMRAM
    87  007F06  EE10 F010          	lfsr	1,16
    88  007F0A                     copy_data0:
    89  007F0A  0009               	tblrd		*+
    90  007F0C  CFF5 FFEE          	movff	tablat,postinc0
    91  007F10  50E5               	movf	postdec1,w,c
    92  007F12  50E1               	movf	fsr1l,w,c
    93  007F14  E1FA               	bnz	copy_data0
    94  007F16                     end_of_initialization:
    95                           	callstack 0
    96  007F16                     __end_of__initialization:
    97                           	callstack 0
    98  007F16  0100               	movlb	0
    99  007F18  EF8E  F03F         	goto	_main	;jump to C main() function
   100                           
   101                           	psect	dataCOMRAM
   102  000001                     __pdataCOMRAM:
   103                           	callstack 0
   104  000001                     _led_run:
   105                           	callstack 0
   106  000001                     	ds	16
   107                           
   108                           	psect	cstackCOMRAM
   109  000011                     __pcstackCOMRAM:
   110                           	callstack 0
   111  000011                     ??_main:
   112                           
   113                           ; 1 bytes @ 0x0
   114  000011                     	ds	2
   115  000013                     main@i_113:
   116                           	callstack 0
   117                           
   118                           ; 2 bytes @ 0x2
   119  000013                     	ds	2
   120  000015                     main@i:
   121                           	callstack 0
   122                           
   123                           ; 2 bytes @ 0x4
   124  000015                     	ds	2
   125                           
   126 ;;
   127 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   128 ;;
   129 ;; *************** function _main *****************
   130 ;; Defined at:
   131 ;;		line 13 in file "newmain.c"
   132 ;; Parameters:    Size  Location     Type
   133 ;;		None
   134 ;; Auto vars:     Size  Location     Type
   135 ;;  i               2    2[COMRAM] int 
   136 ;;  i               2    4[COMRAM] int 
   137 ;; Return value:  Size  Location     Type
   138 ;;                  1    wreg      void 
   139 ;; Registers used:
   140 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   141 ;; Tracked objects:
   142 ;;		On entry : 0/0
   143 ;;		On exit  : 0/0
   144 ;;		Unchanged: 0/0
   145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   146 ;;      Params:         0       0       0       0       0       0       0       0       0
   147 ;;      Locals:         4       0       0       0       0       0       0       0       0
   148 ;;      Temps:          2       0       0       0       0       0       0       0       0
   149 ;;      Totals:         6       0       0       0       0       0       0       0       0
   150 ;;Total ram usage:        6 bytes
   151 ;; This function calls:
   152 ;;		Nothing
   153 ;; This function is called by:
   154 ;;		Startup code after reset
   155 ;; This function uses a non-reentrant model
   156 ;;
   157                           
   158                           	psect	text0
   159  007F1C                     __ptext0:
   160                           	callstack 0
   161  007F1C                     _main:
   162                           	callstack 31
   163  007F1C                     
   164                           ;newmain.c: 14:     ADCON1bits.PCFG = 0b1111;
   165  007F1C  0E0F               	movlw	15
   166  007F1E  12C1               	iorwf	193,f,c	;volatile
   167                           
   168                           ;newmain.c: 15:     OSCCONbits.IRCF = 0b111;
   169  007F20  0E70               	movlw	112
   170  007F22  12D3               	iorwf	211,f,c	;volatile
   171                           
   172                           ;newmain.c: 16:     OSCCONbits.SCS = 0b10;
   173  007F24  50D3               	movf	211,w,c	;volatile
   174  007F26  0BFC               	andlw	-4
   175  007F28  0902               	iorlw	2
   176  007F2A  6ED3               	movwf	211,c	;volatile
   177                           
   178                           ;newmain.c: 17:     TRISB = 0x0;
   179  007F2C  0E00               	movlw	0
   180  007F2E  6E93               	movwf	147,c	;volatile
   181  007F30                     l17:
   182                           
   183                           ;newmain.c: 19:         for(int i = 0;i<8;i++ ){
   184  007F30  0E00               	movlw	0
   185  007F32  6E16               	movwf	(main@i+1)^0,c
   186  007F34  0E00               	movlw	0
   187  007F36  6E15               	movwf	main@i^0,c
   188  007F38                     l706:
   189                           
   190                           ;newmain.c: 20:             LATB = led_run[i];
   191  007F38  90D8               	bcf	status,0,c
   192  007F3A  3415               	rlcf	main@i^0,w,c
   193  007F3C  6ED9               	movwf	fsr2l,c
   194  007F3E  3416               	rlcf	(main@i+1)^0,w,c
   195  007F40  6EDA               	movwf	fsr2h,c
   196  007F42  0E01               	movlw	low _led_run
   197  007F44  26D9               	addwf	fsr2l,f,c
   198  007F46  0E00               	movlw	high _led_run
   199  007F48  22DA               	addwfc	fsr2h,f,c
   200  007F4A  50DF               	movf	indf2,w,c
   201  007F4C  6E8A               	movwf	138,c	;volatile
   202  007F4E                     
   203                           ;newmain.c: 21:             _delay((unsigned long)((500)*(8000000ul/4000.0)));
   204  007F4E  0E06               	movlw	6
   205  007F50  6E12               	movwf	(??_main+1)^0,c
   206  007F52  0E13               	movlw	19
   207  007F54  6E11               	movwf	??_main^0,c
   208  007F56  0EAE               	movlw	174
   209  007F58                     u37:
   210  007F58  2EE8               	decfsz	wreg,f,c
   211  007F5A  D7FE               	bra	u37
   212  007F5C  2E11               	decfsz	??_main^0,f,c
   213  007F5E  D7FC               	bra	u37
   214  007F60  2E12               	decfsz	(??_main+1)^0,f,c
   215  007F62  D7FA               	bra	u37
   216  007F64                     
   217                           ;newmain.c: 22:         }
   218  007F64  4A15               	infsnz	main@i^0,f,c
   219  007F66  2A16               	incf	(main@i+1)^0,f,c
   220  007F68  BE16               	btfsc	(main@i+1)^0,7,c
   221  007F6A  EFC0  F03F         	goto	u11
   222  007F6E  5016               	movf	(main@i+1)^0,w,c
   223  007F70  E109               	bnz	u10
   224  007F72  0E08               	movlw	8
   225  007F74  5C15               	subwf	main@i^0,w,c
   226  007F76  A0D8               	btfss	status,0,c
   227  007F78  EFC0  F03F         	goto	u11
   228  007F7C  EFC2  F03F         	goto	u10
   229  007F80                     u11:
   230  007F80  EF9C  F03F         	goto	l706
   231  007F84                     u10:
   232  007F84                     
   233                           ;newmain.c: 23:         LATB = 0;
   234  007F84  0E00               	movlw	0
   235  007F86  6E8A               	movwf	138,c	;volatile
   236  007F88                     
   237                           ;newmain.c: 24:         _delay((unsigned long)((500)*(8000000ul/4000.0)));
   238  007F88  0E06               	movlw	6
   239  007F8A  6E12               	movwf	(??_main+1)^0,c
   240  007F8C  0E13               	movlw	19
   241  007F8E  6E11               	movwf	??_main^0,c
   242  007F90  0EAE               	movlw	174
   243  007F92                     u47:
   244  007F92  2EE8               	decfsz	wreg,f,c
   245  007F94  D7FE               	bra	u47
   246  007F96  2E11               	decfsz	??_main^0,f,c
   247  007F98  D7FC               	bra	u47
   248  007F9A  2E12               	decfsz	(??_main+1)^0,f,c
   249  007F9C  D7FA               	bra	u47
   250  007F9E                     
   251                           ;newmain.c: 25:         for(int i = 0;i<10;i++ ){
   252  007F9E  0E00               	movlw	0
   253  007FA0  6E14               	movwf	(main@i_113+1)^0,c
   254  007FA2  0E00               	movlw	0
   255  007FA4  6E13               	movwf	main@i_113^0,c
   256  007FA6                     l20:
   257                           
   258                           ;newmain.c: 26:             LATB = 255;
   259  007FA6  688A               	setf	138,c	;volatile
   260  007FA8                     
   261                           ;newmain.c: 27:             _delay((unsigned long)((500)*(8000000ul/4000.0)));
   262  007FA8  0E06               	movlw	6
   263  007FAA  6E12               	movwf	(??_main+1)^0,c
   264  007FAC  0E13               	movlw	19
   265  007FAE  6E11               	movwf	??_main^0,c
   266  007FB0  0EAE               	movlw	174
   267  007FB2                     u57:
   268  007FB2  2EE8               	decfsz	wreg,f,c
   269  007FB4  D7FE               	bra	u57
   270  007FB6  2E11               	decfsz	??_main^0,f,c
   271  007FB8  D7FC               	bra	u57
   272  007FBA  2E12               	decfsz	(??_main+1)^0,f,c
   273  007FBC  D7FA               	bra	u57
   274  007FBE                     
   275                           ;newmain.c: 28:             LATB = 0;
   276  007FBE  0E00               	movlw	0
   277  007FC0  6E8A               	movwf	138,c	;volatile
   278  007FC2                     
   279                           ;newmain.c: 29:             _delay((unsigned long)((500)*(8000000ul/4000.0)));
   280  007FC2  0E06               	movlw	6
   281  007FC4  6E12               	movwf	(??_main+1)^0,c
   282  007FC6  0E13               	movlw	19
   283  007FC8  6E11               	movwf	??_main^0,c
   284  007FCA  0EAE               	movlw	174
   285  007FCC                     u67:
   286  007FCC  2EE8               	decfsz	wreg,f,c
   287  007FCE  D7FE               	bra	u67
   288  007FD0  2E11               	decfsz	??_main^0,f,c
   289  007FD2  D7FC               	bra	u67
   290  007FD4  2E12               	decfsz	(??_main+1)^0,f,c
   291  007FD6  D7FA               	bra	u67
   292  007FD8                     
   293                           ;newmain.c: 30:         }
   294  007FD8  4A13               	infsnz	main@i_113^0,f,c
   295  007FDA  2A14               	incf	(main@i_113+1)^0,f,c
   296  007FDC  BE14               	btfsc	(main@i_113+1)^0,7,c
   297  007FDE  EFFA  F03F         	goto	u21
   298  007FE2  5014               	movf	(main@i_113+1)^0,w,c
   299  007FE4  E109               	bnz	u20
   300  007FE6  0E0A               	movlw	10
   301  007FE8  5C13               	subwf	main@i_113^0,w,c
   302  007FEA  A0D8               	btfss	status,0,c
   303  007FEC  EFFA  F03F         	goto	u21
   304  007FF0  EFFC  F03F         	goto	u20
   305  007FF4                     u21:
   306  007FF4  EFD3  F03F         	goto	l20
   307  007FF8                     u20:
   308  007FF8  EF98  F03F         	goto	l17
   309  007FFC  EF00  F000         	goto	start
   310  008000                     __end_of_main:
   311                           	callstack 0
   312  0000                     
   313                           	psect	rparam
   314  0000                     
   315                           	psect	idloc
   316                           
   317                           ;Config register IDLOC0 @ 0x200000
   318                           ;	unspecified, using default values
   319  200000                     	org	2097152
   320  200000  FF                 	db	255
   321                           
   322                           ;Config register IDLOC1 @ 0x200001
   323                           ;	unspecified, using default values
   324  200001                     	org	2097153
   325  200001  FF                 	db	255
   326                           
   327                           ;Config register IDLOC2 @ 0x200002
   328                           ;	unspecified, using default values
   329  200002                     	org	2097154
   330  200002  FF                 	db	255
   331                           
   332                           ;Config register IDLOC3 @ 0x200003
   333                           ;	unspecified, using default values
   334  200003                     	org	2097155
   335  200003  FF                 	db	255
   336                           
   337                           ;Config register IDLOC4 @ 0x200004
   338                           ;	unspecified, using default values
   339  200004                     	org	2097156
   340  200004  FF                 	db	255
   341                           
   342                           ;Config register IDLOC5 @ 0x200005
   343                           ;	unspecified, using default values
   344  200005                     	org	2097157
   345  200005  FF                 	db	255
   346                           
   347                           ;Config register IDLOC6 @ 0x200006
   348                           ;	unspecified, using default values
   349  200006                     	org	2097158
   350  200006  FF                 	db	255
   351                           
   352                           ;Config register IDLOC7 @ 0x200007
   353                           ;	unspecified, using default values
   354  200007                     	org	2097159
   355  200007  FF                 	db	255
   356                           
   357                           	psect	config
   358                           
   359                           ;Config register CONFIG1L @ 0x300000
   360                           ;	PLL Prescaler Selection bits
   361                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   362                           ;	System Clock Postscaler Selection bits
   363                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   364                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   365                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   366  300000                     	org	3145728
   367  300000  00                 	db	0
   368                           
   369                           ;Config register CONFIG1H @ 0x300001
   370                           ;	Oscillator Selection bits
   371                           ;	FOSC = INTOSC_XT, Internal oscillator, XT used by USB (INTXT)
   372                           ;	Fail-Safe Clock Monitor Enable bit
   373                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   374                           ;	Internal/External Oscillator Switchover bit
   375                           ;	IESO = OFF, Oscillator Switchover mode disabled
   376  300001                     	org	3145729
   377  300001  0A                 	db	10
   378                           
   379                           ;Config register CONFIG2L @ 0x300002
   380                           ;	Power-up Timer Enable bit
   381                           ;	PWRT = OFF, PWRT disabled
   382                           ;	Brown-out Reset Enable bits
   383                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   384                           ;	Brown-out Reset Voltage bits
   385                           ;	BORV = 3, Minimum setting 2.05V
   386                           ;	USB Voltage Regulator Enable bit
   387                           ;	VREGEN = OFF, USB voltage regulator disabled
   388  300002                     	org	3145730
   389  300002  1F                 	db	31
   390                           
   391                           ;Config register CONFIG2H @ 0x300003
   392                           ;	Watchdog Timer Enable bit
   393                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   394                           ;	Watchdog Timer Postscale Select bits
   395                           ;	WDTPS = 32768, 1:32768
   396  300003                     	org	3145731
   397  300003  1E                 	db	30
   398                           
   399                           ; Padding undefined space
   400  300004                     	org	3145732
   401  300004  FF                 	db	255
   402                           
   403                           ;Config register CONFIG3H @ 0x300005
   404                           ;	CCP2 MUX bit
   405                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   406                           ;	PORTB A/D Enable bit
   407                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   408                           ;	Low-Power Timer 1 Oscillator Enable bit
   409                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   410                           ;	MCLR Pin Enable bit
   411                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   412  300005                     	org	3145733
   413  300005  81                 	db	129
   414                           
   415                           ;Config register CONFIG4L @ 0x300006
   416                           ;	Stack Full/Underflow Reset Enable bit
   417                           ;	STVREN = ON, Stack full/underflow will cause Reset
   418                           ;	Single-Supply ICSP Enable bit
   419                           ;	LVP = ON, Single-Supply ICSP enabled
   420                           ;	Extended Instruction Set Enable bit
   421                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   422                           ;	Background Debugger Enable bit
   423                           ;	DEBUG = 0x1, unprogrammed default
   424  300006                     	org	3145734
   425  300006  85                 	db	133
   426                           
   427                           ; Padding undefined space
   428  300007                     	org	3145735
   429  300007  FF                 	db	255
   430                           
   431                           ;Config register CONFIG5L @ 0x300008
   432                           ;	Code Protection bit
   433                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   434                           ;	Code Protection bit
   435                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   436                           ;	Code Protection bit
   437                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   438                           ;	Code Protection bit
   439                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   440  300008                     	org	3145736
   441  300008  0F                 	db	15
   442                           
   443                           ;Config register CONFIG5H @ 0x300009
   444                           ;	Boot Block Code Protection bit
   445                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   446                           ;	Data EEPROM Code Protection bit
   447                           ;	CPD = OFF, Data EEPROM is not code-protected
   448  300009                     	org	3145737
   449  300009  C0                 	db	192
   450                           
   451                           ;Config register CONFIG6L @ 0x30000A
   452                           ;	Write Protection bit
   453                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   454                           ;	Write Protection bit
   455                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   456                           ;	Write Protection bit
   457                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   458                           ;	Write Protection bit
   459                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   460  30000A                     	org	3145738
   461  30000A  0F                 	db	15
   462                           
   463                           ;Config register CONFIG6H @ 0x30000B
   464                           ;	Configuration Register Write Protection bit
   465                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   466                           ;	Boot Block Write Protection bit
   467                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   468                           ;	Data EEPROM Write Protection bit
   469                           ;	WRTD = OFF, Data EEPROM is not write-protected
   470  30000B                     	org	3145739
   471  30000B  E0                 	db	224
   472                           
   473                           ;Config register CONFIG7L @ 0x30000C
   474                           ;	Table Read Protection bit
   475                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   476                           ;	Table Read Protection bit
   477                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   478                           ;	Table Read Protection bit
   479                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   480                           ;	Table Read Protection bit
   481                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   482  30000C                     	org	3145740
   483  30000C  0F                 	db	15
   484                           
   485                           ;Config register CONFIG7H @ 0x30000D
   486                           ;	Boot Block Table Read Protection bit
   487                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   488  30000D                     	org	3145741
   489  30000D  40                 	db	64
   490                           tosu	equ	0xFFF
   491                           tosh	equ	0xFFE
   492                           tosl	equ	0xFFD
   493                           stkptr	equ	0xFFC
   494                           pclatu	equ	0xFFB
   495                           pclath	equ	0xFFA
   496                           pcl	equ	0xFF9
   497                           tblptru	equ	0xFF8
   498                           tblptrh	equ	0xFF7
   499                           tblptrl	equ	0xFF6
   500                           tablat	equ	0xFF5
   501                           prodh	equ	0xFF4
   502                           prodl	equ	0xFF3
   503                           indf0	equ	0xFEF
   504                           postinc0	equ	0xFEE
   505                           postdec0	equ	0xFED
   506                           preinc0	equ	0xFEC
   507                           plusw0	equ	0xFEB
   508                           fsr0h	equ	0xFEA
   509                           fsr0l	equ	0xFE9
   510                           wreg	equ	0xFE8
   511                           indf1	equ	0xFE7
   512                           postinc1	equ	0xFE6
   513                           postdec1	equ	0xFE5
   514                           preinc1	equ	0xFE4
   515                           plusw1	equ	0xFE3
   516                           fsr1h	equ	0xFE2
   517                           fsr1l	equ	0xFE1
   518                           bsr	equ	0xFE0
   519                           indf2	equ	0xFDF
   520                           postinc2	equ	0xFDE
   521                           postdec2	equ	0xFDD
   522                           preinc2	equ	0xFDC
   523                           plusw2	equ	0xFDB
   524                           fsr2h	equ	0xFDA
   525                           fsr2l	equ	0xFD9
   526                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6      22
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0      75
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      6      16       1       23.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      16      20        0.0%
DATA                 0      0      16       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Oct 05 19:47:13 2020

                     l20 7FA6                       l17 7F30                       u10 7F84  
                     u11 7F80                       u20 7FF8                       u21 7FF4  
                     u37 7F58                       u47 7F92                       u57 7FB2  
                     u67 7FCC                      l700 7F1C                      l710 7F64  
                    l712 7F68                      l730 7FD8                      l714 7F84  
                    l706 7F38                      l732 7FDC                      l724 7FA8  
                    l716 7F88                      l708 7F4E                      l726 7FBE  
                    l718 7F9E                      l728 7FC2                      wreg 000FE8  
                   _LATB 000F8A                     _main 7F1C                     fsr2h 000FDA  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   start 0000             ___param_bank 000000                    ?_main 0011  
                  _TRISB 000F93                    main@i 0015                    tablat 000FF5  
                  status 000FD8          __initialization 7EF6             __end_of_main 8000  
                 ??_main 0011            __activetblptr 000000             __pdataCOMRAM 0001  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 7F16            ___rparam_used 000001  
         __pcstackCOMRAM 0011                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7EF6                  __ramtop 0800                  __ptext0 7F1C  
                _led_run 0001     end_of_initialization 7F16                  postdec1 000FE5  
                postinc0 000FEE            __pidataCOMRAM 7EE6      start_initialization 7EF6  
             _ADCON1bits 000FC1                main@i_113 0013                copy_data0 7F0A  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 00E4  
             _OSCCONbits 000FD3  
